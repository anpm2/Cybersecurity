# cipher = [  0x39, 0x00, 0x00, 0x00, 0x9B, 0xFF, 0xFF, 0xFF, 0x2C, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x00, 0x00, 
#             0x59, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0xAB, 0x00, 0x00, 0x00, 
#             0xCE, 0xFF, 0xFF, 0xFF, 0xC6, 0x00, 0x00, 0x00, 0x8C, 0x01, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 
#             0xDA, 0xFF, 0xFF, 0xFF, 0x73, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 
#             0xAB, 0xFF, 0xFF, 0xFF, 0xAF, 0xFF, 0xFF, 0xFF, 0xD9, 0xFF, 0xFF, 0xFF, 0xAD, 0xFF, 0xFF, 0xFF, 
#             0xAE, 0xFF, 0xFF, 0xFF, 0xB0, 0xFF, 0xFF, 0xFF, 0xB2, 0xFF, 0xFF, 0xFF, 0xE0, 0xFF, 0xFF, 0xFF, 
#             0xE2, 0xFF, 0xFF, 0xFF, 0xE1, 0xFF, 0xFF, 0xFF, 0x4F, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 
#             0x4C, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 
#             0x83, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00, 
#             0x0C, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x00, 
#             0x3E, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x3A, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 
#             0x0D, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x58, 0x09, 0x00, 0x00, 0x2E, 0x09, 0x00, 0x00, 
#             0x20, 0x0A, 0x00, 0x00, 0xF3, 0x12, 0x00, 0x00, 0xF0, 0x0A, 0x00, 0x00, 0x52, 0x14, 0x00, 0x00, 
#             0x94, 0x0B, 0x00, 0x00, 0xB4, 0x14, 0x00, 0x00, 0x56, 0x0A, 0x00, 0x00, 0x9A, 0x0B, 0x00, 0x00, 
#             0x63, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x8F, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 
#             0x8C, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x8C, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00  ]

# enc = []
# for i in range(0, len(cipher), 4):
#     enc.append((cipher[i+3] << 24) | (cipher[i+2] << 16) | (cipher[i+1] << 8) | cipher[i])

# print(enc, end='\n\n')

from ida_bytes import *
enc = []
for i in range(64):
    enc.append(get_dword(0x4020 + 0x4 * i))
print(enc, end='\n\n')

flag = [0]*64

flag[0] = enc[0] - 9
flag[1] = ~enc[1]
flag[2] = enc[2] + 4
flag[3] = enc[3] // 2
flag[4] = enc[4] - 34
flag[5] = enc[5] -40
flag[6] = enc[6] + 40
flag[7] = enc[7] // 3
flag[8] = ~enc[8]
flag[9] = enc[9] // 2
flag[10] = enc[10] // 4
flag[11] = enc[11] // 4
flag[12] = (19 - enc[12])
flag[13] = enc[13] - 17
flag[14] = enc[14] - 30
flag[15] = enc[15]

#check_not
for i in range(16, 26):
    flag[i] = ~(enc[i] - i)

#check_add
for i in range(26, 36):
    flag[i] = (enc[i] - i)

#check_dec
for i in range(36, 46):
    flag[i] = (enc[i] + i)

#check_mu
for i in range(46, 56):
    flag[i] = (enc[i] // i)

#check_la
for i in range(56, 64):
    flag[i] = (enc[i] + i - 100)

[print(chr(val & 0xFF), end='') for val in flag]
print()
